gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
util.h:48:13:bool flatbuffers::check_ascii_range(char, char, char)	16	static
util.h:56:13:bool flatbuffers::is_alpha(char)	16	static
util.h:65:13:bool flatbuffers::is_alpha_char(char, char)	16	static
util.h:76:13:bool flatbuffers::is_digit(char)	16	static
util.h:249:13:void flatbuffers::strtoval_impl(int64_t*, const char*, char**, int)	24	static
util.h:254:13:void flatbuffers::strtoval_impl(uint64_t*, const char*, char**, int)	24	static
util.h:391:16:int64_t flatbuffers::StringToInt(const char*, int)	24	static
util.h:396:17:uint64_t flatbuffers::StringToUInt(const char*, int)	24	static
flexbuffers.h:148:16:int64_t flexbuffers::ReadInt64(const uint8_t*, uint8_t)	16	static
flexbuffers.h:153:17:uint64_t flexbuffers::ReadUInt64(const uint8_t*, uint8_t)	16	static
flexbuffers.h:174:15:double flexbuffers::ReadDouble(const uint8_t*, uint8_t)	16	static
flexbuffers.h:179:23:const uint8_t* flexbuffers::Indirect(const uint8_t*, uint8_t)	16	static
flexbuffers.h:213:3:flexbuffers::Object::Object(const uint8_t*, uint8_t)	24	static
flexbuffers.h:225:3:flexbuffers::Sized::Sized(const uint8_t*, uint8_t)	24	static
flexbuffers.h:228:3:flexbuffers::Sized::Sized(const uint8_t*, uint8_t, size_t)	24	static
flexbuffers.h:230:10:size_t flexbuffers::Sized::size() const	16	static
flexbuffers.h:232:10:size_t flexbuffers::Sized::read_size() const	16	static
flexbuffers.h:243:3:flexbuffers::String::String(const uint8_t*, uint8_t)	24	static
flexbuffers.h:245:3:flexbuffers::String::String(const uint8_t*, uint8_t, size_t)	24	static
flexbuffers.h:249:15:const char* flexbuffers::String::c_str() const	16	static
flexbuffers.h:252:17:static flexbuffers::String flexbuffers::String::EmptyString()	16	static
flexbuffers.h:274:3:flexbuffers::Vector::Vector(const uint8_t*, uint8_t)	24	static
flexbuffers.h:278:17:static flexbuffers::Vector flexbuffers::Vector::EmptyVector()	16	static
flexbuffers.h:287:3:flexbuffers::TypedVector::TypedVector(const uint8_t*, uint8_t, flexbuffers::Type)	24	static
flexbuffers.h:336:3:flexbuffers::Map::Map(const uint8_t*, uint8_t)	24	static
flexbuffers.h:343:15:flexbuffers::TypedVector flexbuffers::Map::Keys() const	32	static
flexbuffers.h:352:14:static flexbuffers::Map flexbuffers::Map::EmptyMap()	16	static
flexbuffers.h:384:3:flexbuffers::Reference::Reference(const uint8_t*, uint8_t, uint8_t)	24	static
flexbuffers.h:392:8:bool flexbuffers::Reference::IsNull() const	16	static
flexbuffers.h:416:8:bool flexbuffers::Reference::AsBool() const	16	static
flexbuffers.h:424:11:int64_t flexbuffers::Reference::AsInt64() const	40	static
flexbuffers.h:449:11:int32_t flexbuffers::Reference::AsInt32() const	16	static
flexbuffers.h:453:12:uint64_t flexbuffers::Reference::AsUInt64() const	40	static
flexbuffers.h:480:10:double flexbuffers::Reference::AsDouble() const	32	static
flexbuffers.h:525:9:float flexbuffers::Reference::AsFloat() const	16	static
flexbuffers.h:537:10:flexbuffers::String flexbuffers::Reference::AsString() const	32	static
flexbuffers.h:640:10:flexbuffers::Vector flexbuffers::Reference::AsVector() const	16	static
flexbuffers.h:677:7:flexbuffers::Map flexbuffers::Reference::AsMap() const	16	static
flexbuffers.h:764:18:const uint8_t* flexbuffers::Reference::Indirect() const	16	static
flexbuffers.h:836:16:uint8_t flexbuffers::PackedType(flexbuffers::BitWidth, flexbuffers::Type)	16	static
flexbuffers.h:840:16:uint8_t flexbuffers::NullPackedType()	8	static
flexbuffers.h:849:18:flexbuffers::Reference flexbuffers::Vector::operator[](size_t) const	40	static
flexbuffers.h:877:18:flexbuffers::Reference flexbuffers::Map::operator[](const char*) const	72	static
flexbuffers.h:899:18:flexbuffers::Reference flexbuffers::GetRoot(const uint8_t*, size_t)	32	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = int]	16	static
kernel_util.h:153:12:int tflite::NumDimensions(const TfLiteTensor*)	16	static
kernel_util.h:158:12:int tflite::NumInputs(const TfLiteNode*)	16	static
kernel_util.h:161:12:int tflite::NumOutputs(const TfLiteNode*)	16	static
micro_context.h:102:22:tflite::MicroContext* tflite::GetMicroContext(const TfLiteContext*)	16	static
detection_postprocess.cc:120:7:void* tflite::{anonymous}::Init(TfLiteContext*, const char*, size_t)	160	static
detection_postprocess.cc:152:14:TfLiteStatus tflite::{anonymous}::Prepare(TfLiteContext*, TfLiteNode*)	72	static
detection_postprocess.cc:255:14:TfLiteStatus tflite::{anonymous}::DecodeCenterSizeBoxes(TfLiteContext*, TfLiteNode*, tflite::{anonymous}::OpData*)	144	static
detection_postprocess.cc:324:21:tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)>	40	static
detection_postprocess.cc:320:6:void tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)	24	static
detection_postprocess.cc:375:43:tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)>	24	static
detection_postprocess.cc:371:6:void tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)	24	static
detection_postprocess.cc:380:5:int tflite::{anonymous}::SelectDetectionsAboveScoreThreshold(const float*, int, float, float*, int*)	40	static
detection_postprocess.cc:394:6:bool tflite::{anonymous}::ValidateBoxes(const float*, int)	24	static
detection_postprocess.cc:405:7:float tflite::{anonymous}::ComputeIntersectionOverUnion(const float*, int, int)	88	static
detection_postprocess.cc:428:14:TfLiteStatus tflite::{anonymous}::NonMaxSuppressionSingleClassHelper(TfLiteContext*, TfLiteNode*, tflite::{anonymous}::OpData*, const float*, int*, int*, int)	120	static
detection_postprocess.cc:517:14:TfLiteStatus tflite::{anonymous}::NonMaxSuppressionMultiClassRegularHelper(TfLiteContext*, TfLiteNode*, tflite::{anonymous}::OpData*, const float*)	192	static
detection_postprocess.cc:650:14:TfLiteStatus tflite::{anonymous}::NonMaxSuppressionMultiClassFastHelper(TfLiteContext*, TfLiteNode*, tflite::{anonymous}::OpData*, const float*)	160	static
detection_postprocess.cc:737:14:TfLiteStatus tflite::{anonymous}::NonMaxSuppressionMultiClass(TfLiteContext*, TfLiteNode*, tflite::{anonymous}::OpData*)	80	static
detection_postprocess.cc:777:14:TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*)	24	static
detection_postprocess.cc:802:19:TFLMRegistration* tflite::Register_DETECTION_POSTPROCESS()	16	static
util.h:287:13:bool flatbuffers::StringToIntegerImpl(T*, const char*, int, bool) [with T = long long int]	32	static
util.h:287:13:bool flatbuffers::StringToIntegerImpl(T*, const char*, int, bool) [with T = long long unsigned int]	32	static
flexbuffers.h:138:3:R flexbuffers::ReadSizedScalar(const uint8_t*, uint8_t) [with R = long long int; T1 = signed char; T2 = short int; T4 = long int; T8 = long long int]	16	static
flexbuffers.h:138:3:R flexbuffers::ReadSizedScalar(const uint8_t*, uint8_t) [with R = long long unsigned int; T1 = unsigned char; T2 = short unsigned int; T4 = long unsigned int; T8 = long long unsigned int]	16	static
flexbuffers.h:138:3:R flexbuffers::ReadSizedScalar(const uint8_t*, uint8_t) [with R = double; T1 = signed char; T2 = short int; T4 = float; T8 = double]	16	static
flexbuffers.h:870:26:int flexbuffers::KeyCompare(const void*, const void*) [with T = unsigned char]	24	static
flexbuffers.h:870:26:int flexbuffers::KeyCompare(const void*, const void*) [with T = short unsigned int]	24	static
flexbuffers.h:870:26:int flexbuffers::KeyCompare(const void*, const void*) [with T = long unsigned int]	24	static
flexbuffers.h:870:26:int flexbuffers::KeyCompare(const void*, const void*) [with T = long long unsigned int]	24	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = long unsigned int]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = long unsigned int]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = long int]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = short unsigned int]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = unsigned char]	16	static
stl_algobase.h:222:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = int]	16	static
kernel_util.h:76:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = float]	16	static
detection_postprocess.cc:244:3:T tflite::{anonymous}::ReInterpretTensor(const TfLiteEvalTensor*) [with T = const tflite::{anonymous}::CenterSizeEncoding*]	24	static
stl_numeric.h:87:5:void std::iota(_ForwardIterator, _ForwardIterator, _Tp) [with _ForwardIterator = int*; _Tp = int]	24	static
tuple:1611:5:) [with _Elements = {const float, const int}]	24	static
tuple:1451:5:>&) [with _TElements = {const float&, const int&}; _UElements = {const float&, const int&}]	16	static
stl_algo.h:4745:5:void std::partial_sort(_RAIter, _RAIter, _RAIter, _Compare) [with _RAIter = int*; _Compare = tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)>]	24	static
detection_postprocess.cc:354:6:void tflite::{anonymous}::MergeSort(int*, int*, int, Compare) [with Compare = tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)>]	40	static
stl_algobase.h:222:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = float]	16	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = float]	16	static
detection_postprocess.cc:250:3:T tflite::{anonymous}::ReInterpretTensor(TfLiteEvalTensor*) [with T = tflite::{anonymous}::BoxCornerEncoding*]	24	static
kernel_util.h:69:4:T* tflite::micro::GetTensorData(TfLiteEvalTensor*) [with T = float]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = signed char]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = short int]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = long long int]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = long long unsigned int]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = float]	16	static
base.h:427:3:T flatbuffers::ReadScalar(const void*) [with T = double]	16	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = long long int]	16	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = long long unsigned int]	16	static
flexbuffers.h:183:37:const uint8_t* flexbuffers::Indirect(const uint8_t*) [with T = unsigned char]	16	static
flexbuffers.h:183:37:const uint8_t* flexbuffers::Indirect(const uint8_t*) [with T = short unsigned int]	16	static
flexbuffers.h:183:37:const uint8_t* flexbuffers::Indirect(const uint8_t*) [with T = long unsigned int]	16	static
flexbuffers.h:183:37:const uint8_t* flexbuffers::Indirect(const uint8_t*) [with T = long long unsigned int]	16	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = unsigned char]	16	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = double]	16	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = float]	16	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = long int]	16	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = short unsigned int]	16	static
tuple:945:19:constexpr std::tuple<_T1, _T2>::tuple(const _T1&, const _T2&) [with _Dummy = void; typename std::enable_if<(std::_TC<std::is_same<_Dummy, void>::value, _T1, _T2>::_ConstructibleTuple<_T1, _T2>() && std::_TC<std::is_same<_Dummy, void>::value, _T1, _T2>::_ImplicitlyConvertibleTuple<_T1, _T2>()), bool>::type <anonymous> = true; _T1 = const float&; _T2 = const int&]	24	static
tuple:1432:5:>&) [with _TElements = {const float&, const int&}; _UElements = {const float&, const int&}]	16	static
predefined_ops.h:149:5:constexpr __gnu_cxx::__ops::_Iter_comp_iter<_Compare> __gnu_cxx::__ops::__iter_comp_iter(_Compare) [with _Compare = tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)>]	24	static
stl_algo.h:1927:5:void std::__partial_sort(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = int*; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)> >]	24	static
detection_postprocess.cc:330:6:void tflite::{anonymous}::InsertionSort(int*, int*, Compare) [with Compare = tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)>]	32	static
detection_postprocess.cc:337:6:void tflite::{anonymous}::TopDownMerge(int*, int*, int, int, Compare) [with Compare = tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)>]	40	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = signed char]	16	static
base.h:416:24:T flatbuffers::EndianScalar(T) [with T = short int]	16	static
tuple:210:17:) [with unsigned int _Idx = 0; _Head = const float&; _Tail = {const int&}]	24	static
tuple:125:17:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with unsigned int _Idx = 0; _Head = const float&]	16	static
tuple:1326:5:>&) [with unsigned int __i = 0; _Elements = {const float&, const int&}]	16	static
tuple:1314:5:>&) [with unsigned int __i = 0; _Head = const float&; _Tail = {const int&}]	16	static
tuple:198:7:>&) [with unsigned int _Idx = 0; _Head = const float&; _Tail = {const int&}]	16	static
tuple:163:7:static constexpr const _Head& std::_Head_base<_Idx, _Head, false>::_M_head(const std::_Head_base<_Idx, _Head, false>&) [with unsigned int _Idx = 0; _Head = const float&]	16	static
tuple:1399:7:static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const float&, const int&>; _Up = std::tuple<const float&, const int&>; unsigned int __i = 0; unsigned int __size = 2]	24	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)>&]	16	static
predefined_ops.h:135:7:constexpr __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::_Iter_comp_iter(_Compare) [with _Compare = tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)>]	16	static
stl_algo.h:1667:5:void std::__heap_select(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare) [with _RandomAccessIterator = int*; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)> >]	32	static
stl_heap.h:402:5:void std::__sort_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare&) [with _RandomAccessIterator = int*; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)> >]	24	static
stl_algo.h:2106:5:_FIter std::upper_bound(_FIter, _FIter, const _Tp&, _Compare) [with _FIter = int*; _Tp = int; _Compare = tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)>]	24	static
stl_algo.h:1434:5:_FIter std::_V2::rotate(_FIter, _FIter, _FIter) [with _FIter = int*]	40	static
tuple:343:17:constexpr std::_Tuple_impl<_Idx, _Head>::_Tuple_impl(const _Head&) [with unsigned int _Idx = 1; _Head = const int&]	16	static
tuple:125:17:constexpr std::_Head_base<_Idx, _Head, false>::_Head_base(const _Head&) [with unsigned int _Idx = 1; _Head = const int&]	16	static
tuple:1326:5:>&) [with unsigned int __i = 1; _Elements = {const float&, const int&}]	16	static
tuple:1314:5:>&) [with unsigned int __i = 1; _Head = const int&; _Tail = {}]	16	static
tuple:337:7:static constexpr const _Head& std::_Tuple_impl<_Idx, _Head>::_M_head(const std::_Tuple_impl<_Idx, _Head>&) [with unsigned int _Idx = 1; _Head = const int&]	16	static
tuple:163:7:static constexpr const _Head& std::_Head_base<_Idx, _Head, false>::_M_head(const std::_Head_base<_Idx, _Head, false>&) [with unsigned int _Idx = 1; _Head = const int&]	16	static
tuple:1399:7:static constexpr bool std::__tuple_compare<_Tp, _Up, __i, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const float&, const int&>; _Up = std::tuple<const float&, const int&>; unsigned int __i = 1; unsigned int __size = 2]	24	static
stl_heap.h:326:5:void std::__make_heap(_RandomAccessIterator, _RandomAccessIterator, _Compare&) [with _RandomAccessIterator = int*; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)> >]	48	static
predefined_ops.h:142:9:constexpr bool __gnu_cxx::__ops::_Iter_comp_iter<_Compare>::operator()(_Iterator1, _Iterator2) [with _Iterator1 = int*; _Iterator2 = int*; _Compare = tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)>]	24	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = int&]	16	static
stl_heap.h:243:5:void std::__pop_heap(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, _Compare&) [with _RandomAccessIterator = int*; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)> >]	48	static
predefined_ops.h:220:5:__gnu_cxx::__ops::_Val_comp_iter<_Compare> __gnu_cxx::__ops::__val_comp_iter(_Compare) [with _Compare = tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)>]	24	static
stl_algo.h:2038:5:_ForwardIterator std::__upper_bound(_ForwardIterator, _ForwardIterator, const _Tp&, _Compare) [with _ForwardIterator = int*; _Tp = int; _Compare = __gnu_cxx::__ops::_Val_comp_iter<tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)> >]	40	static
stl_iterator_base_types.h:205:5:constexpr typename std::iterator_traits<_Iterator>::iterator_category std::__iterator_category(const _Iter&) [with _Iter = int*]	16	static
stl_algo.h:1328:5:_RandomAccessIterator std::_V2::__rotate(_RandomAccessIterator, _RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = int*]	64	static
tuple:1414:7:static constexpr bool std::__tuple_compare<_Tp, _Up, __size, __size>::__less(const _Tp&, const _Up&) [with _Tp = std::tuple<const float&, const int&>; _Up = std::tuple<const float&, const int&>; unsigned int __size = 2]	16	static
stl_heap.h:214:5:void std::__adjust_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare) [with _RandomAccessIterator = int*; _Distance = int; _Tp = int; _Compare = __gnu_cxx::__ops::_Iter_comp_iter<tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)> >]	48	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)>&]	16	static
predefined_ops.h:196:7:__gnu_cxx::__ops::_Val_comp_iter<_Compare>::_Val_comp_iter(_Compare) [with _Compare = tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)>]	16	static
stl_iterator_base_funcs.h:138:5:typename std::iterator_traits<_Iterator>::difference_type std::distance(_InputIterator, _InputIterator) [with _InputIterator = int*]	32	static
stl_iterator_base_funcs.h:202:5:void std::advance(_InputIterator&, _Distance) [with _InputIterator = int*; _Distance = int]	32	static
predefined_ops.h:214:2:bool __gnu_cxx::__ops::_Val_comp_iter<_Compare>::operator()(_Value&, _Iterator) [with _Value = const int; _Iterator = int*; _Compare = tflite::{anonymous}::DecreasingArgSort(const float*, int, int*, int*)::<lambda(int, int)>]	24	static
stl_algobase.h:169:5:_ForwardIterator2 std::swap_ranges(_ForwardIterator1, _ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = int*; _ForwardIterator2 = int*]	24	static
stl_algobase.h:497:5:_OI std::move(_II, _II, _OI) [with _II = int*; _OI = int*]	32	static
stl_algobase.h:123:5:void std::iter_swap(_ForwardIterator1, _ForwardIterator2) [with _ForwardIterator1 = int*; _ForwardIterator2 = int*]	16	static
move.h:182:5:typename std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<_Tp> >, std::is_move_constructible<_Tp>, std::is_move_assignable<_Tp> >::value>::type std::swap(_Tp&, _Tp&) [with _Tp = int]	24	static
stl_algobase.h:676:5:_BI2 std::move_backward(_BI1, _BI1, _BI2) [with _BI1 = int*; _BI2 = int*]	32	static
move.h:99:5:constexpr typename std::remove_reference<_Tp>::type&& std::move(_Tp&&) [with _Tp = __gnu_cxx::__ops::_Iter_comp_iter<tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)> >&]	16	static
predefined_ops.h:169:7:__gnu_cxx::__ops::_Iter_comp_val<_Compare>::_Iter_comp_val(__gnu_cxx::__ops::_Iter_comp_iter<_Compare>&&) [with _Compare = tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)>]	16	static
stl_heap.h:128:5:void std::__push_heap(_RandomAccessIterator, _Distance, _Distance, _Tp, _Compare&) [with _RandomAccessIterator = int*; _Distance = int; _Tp = int; _Compare = __gnu_cxx::__ops::_Iter_comp_val<tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)> >]	32	static
stl_iterator_base_funcs.h:98:5:constexpr typename std::iterator_traits<_Iterator>::difference_type std::__distance(_RandomAccessIterator, _RandomAccessIterator, std::random_access_iterator_tag) [with _RandomAccessIterator = int*]	24	static
stl_iterator_base_funcs.h:174:5:constexpr void std::__advance(_RandomAccessIterator&, _Distance, std::random_access_iterator_tag) [with _RandomAccessIterator = int*; _Distance = int]	24	static
cpp_type_traits.h:428:5:_Iterator std::__miter_base(_Iterator) [with _Iterator = int*]	16	static
stl_algobase.h:438:5:_OI std::__copy_move_a2(_II, _II, _OI) [with bool _IsMove = true; _II = int*; _OI = int*]	32	static
stl_algobase.h:613:5:_BI2 std::__copy_move_backward_a2(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = int*; _BI2 = int*]	32	static
predefined_ops.h:176:2:bool __gnu_cxx::__ops::_Iter_comp_val<_Compare>::operator()(_Iterator, _Value&) [with _Iterator = int*; _Value = int; _Compare = tflite::{anonymous}::DecreasingPartialArgSort(const float*, int, int, int*)::<lambda(int, int)>]	24	static
stl_algobase.h:280:5:_Iterator std::__niter_base(_Iterator) [with _Iterator = int*]	16	static
stl_algobase.h:393:5:_OI std::__copy_move_a(_II, _II, _OI) [with bool _IsMove = true; _II = int*; _OI = int*]	32	static
stl_algobase.h:295:5:_Iterator std::__niter_wrap(const _Iterator&, _Iterator) [with _Iterator = int*]	16	static
stl_algobase.h:595:5:_BI2 std::__copy_move_backward_a(_BI1, _BI1, _BI2) [with bool _IsMove = true; _BI1 = int*; _BI2 = int*]	32	static
stl_algobase.h:375:2:static _Tp* std::__copy_move<_IsMove, true, std::random_access_iterator_tag>::__copy_m(const _Tp*, const _Tp*, _Tp*) [with _Tp = int; bool _IsMove = true]	32	static
stl_algobase.h:577:2:static _Tp* std::__copy_move_backward<_IsMove, true, std::random_access_iterator_tag>::__copy_move_b(const _Tp*, const _Tp*, _Tp*) [with _Tp = int; bool _IsMove = true]	32	static
