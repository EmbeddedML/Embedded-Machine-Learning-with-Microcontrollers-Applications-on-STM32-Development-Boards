limits:525:7:static constexpr signed char std::numeric_limits<signed char>::min()	4	static
limits:528:7:static constexpr signed char std::numeric_limits<signed char>::max()	4	static
limits:1204:7:static constexpr long int std::numeric_limits<long int>::min()	4	static
limits:1207:7:static constexpr long int std::numeric_limits<long int>::max()	4	static
runtime_shape.h:64:3:tflite::RuntimeShape::~RuntimeShape()	16	static
runtime_shape.h:84:18:const int32_t* tflite::RuntimeShape::DimsData() const	16	static
runtime_shape.h:96:7:int tflite::RuntimeShape::FlatSize() const	32	static
gthr-default.h:229:1:int __gthread_key_delete(__gthread_key_t)	16	static
fixedpoint.h:329:21:IntegerType gemmlowp::SaturatingRoundingDoublingHighMul(IntegerType, IntegerType) [with IntegerType = long int]	64	static
common.h:354:16:int32_t tflite::MultiplyByQuantizedMultiplierSmallerThanOneExp(int32_t, int32_t, int)	24	static
stl_algobase.h:198:5:constexpr const _Tp& std::min(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
stl_algobase.h:222:5:constexpr const _Tp& std::max(const _Tp&, const _Tp&) [with _Tp = long int]	16	static
add_n.h:42:13:void tflite::reference_ops::AddN(const tflite::ArithmeticParams&, const tflite::RuntimeShape&, size_t, const int8_t* const*, int8_t*)	80	static
kernel_util.h:158:12:int tflite::NumInputs(const TfLiteNode*)	16	static
kernel_util.h:161:12:int tflite::NumOutputs(const TfLiteNode*)	16	static
micro_context.h:102:22:tflite::MicroContext* tflite::GetMicroContext(const TfLiteContext*)	16	static
add_n.cc:49:14:TfLiteStatus tflite::{anonymous}::CalculateOpData(TfLiteContext*, TfLiteNode*)	120	static
add_n.cc:136:14:TfLiteStatus tflite::{anonymous}::Prepare(TfLiteContext*, TfLiteNode*)	16	static
add_n.cc:194:14:TfLiteStatus tflite::{anonymous}::Eval(TfLiteContext*, TfLiteNode*)	24	static
add_n.cc:211:18:TFLMRegistration tflite::Register_ADD_N()	24	static
fixedpoint.h:357:20:IntegerType gemmlowp::RoundingDivideByPOT(IntegerType, int) [with IntegerType = long int]	56	static
add_n.cc:157:6:void tflite::{anonymous}::EvalAddN(TfLiteContext*, TfLiteNode*, TfLiteEvalTensor*) [with T = float]	72	static
add_n.cc:171:6:void tflite::{anonymous}::EvalAddNQuantized(TfLiteContext*, TfLiteNode*, TfLiteEvalTensor*) [with T = signed char]	184	static
fixedpoint.h:64:10:tRawType gemmlowp::Dup(typename gemmlowp::FixedPointRawTypeTraits<tRawType>::ScalarRawType) [with tRawType = long int]	16	static
fixedpoint.h:70:14:tIntegerType gemmlowp::BitAnd(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:140:14:tIntegerType gemmlowp::ShiftRight(tIntegerType, int) [with tIntegerType = long int]	16	static
fixedpoint.h:199:14:tIntegerType gemmlowp::MaskIfLessThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:94:14:tIntegerType gemmlowp::Add(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
fixedpoint.h:185:14:tIntegerType gemmlowp::MaskIfGreaterThan(tIntegerType, tIntegerType) [with tIntegerType = long int]	16	static
add_n.cc:141:18:const T** tflite::{anonymous}::CopyInputsToScratchBuffer(TfLiteContext*, TfLiteNode*, int) [with T = float]	56	static
kernel_util.h:69:4:T* tflite::micro::GetTensorData(TfLiteEvalTensor*) [with T = float]	16	static
add_n.h:28:13:void tflite::reference_ops::AddN(const tflite::RuntimeShape&, size_t, const T* const*, T*) [with T = float]	40	static
add_n.cc:141:18:const T** tflite::{anonymous}::CopyInputsToScratchBuffer(TfLiteContext*, TfLiteNode*, int) [with T = signed char]	56	static
types.h:1025:13:void tflite::SetActivationParams(int32_t, int32_t, P*) [with P = tflite::ArithmeticParams]	24	static
kernel_util.h:69:4:T* tflite::micro::GetTensorData(TfLiteEvalTensor*) [with T = signed char]	16	static
fixedpoint.h:156:14:tIntegerType gemmlowp::MaskIfNonZero(tIntegerType) [with tIntegerType = long int]	16	static
kernel_util.h:76:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = float]	16	static
kernel_util.h:76:10:const T* tflite::micro::GetTensorData(const TfLiteEvalTensor*) [with T = signed char]	16	static
fixedpoint.h:88:14:tIntegerType gemmlowp::BitNot(tIntegerType) [with tIntegerType = long int]	16	static
